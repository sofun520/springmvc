<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.springmvc.dao.JhacSaasMapper">
	<resultMap id="BaseResultMap" type="cn.springmvc.model.JhacSaas">
		<id column="s_id" property="sId" jdbcType="INTEGER" />
		<result column="s_network" property="sNetwork" jdbcType="CHAR" />
		<result column="s_begin_date" property="sBeginDate" jdbcType="TIMESTAMP" />
		<result column="s_expire_date" property="sExpireDate" jdbcType="TIMESTAMP" />
		<result column="s_status" property="sStatus" jdbcType="CHAR" />
		<result column="s_create_time" property="sCreateTime" jdbcType="TIMESTAMP" />
		<result column="s_create_id" property="sCreateId" jdbcType="INTEGER" />
		<result column="s_update_time" property="sUpdateTime" jdbcType="TIMESTAMP" />
		<result column="s_update_id" property="sUpdateId" jdbcType="INTEGER" />
	</resultMap>


	<sql id="Base_Column_List">
		s_id, s_network, s_begin_date, s_expire_date, s_status,
		s_create_time,
		s_create_id,
		s_update_time, s_update_id
	</sql>


	<select id="find" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from jhac_saas
		where s_id = #{sId,jdbcType=INTEGER}
	</select>

	<sql id="sql4where">
		<if test="saas.sNetwork != null and saas.sNetwork != ''">
			and s_network = #{saas.sNetwork}
		</if>
	</sql>

	<select id="query" resultMap="BaseResultMap" parameterType="java.util.Map">
		select
		<include refid="Base_Column_List" />
		from jhac_saas
		where 1=1
		<include refid="sql4where" />
	</select>

	<select id="count" resultType="java.lang.Integer" parameterType="java.util.Map">
		select
		count(*)
		from jhac_saas
		where 1=1
		<include refid="sql4where" />
	</select>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from jhac_saas
		where
		s_id = #{sId,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="cn.springmvc.model.JhacSaas">
		insert into jhac_saas
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sId != null">
				s_id,
			</if>
			<if test="sNetwork != null">
				s_network,
			</if>
			<if test="sBeginDate != null">
				s_begin_date,
			</if>
			<if test="sExpireDate != null">
				s_expire_date,
			</if>
			<if test="sStatus != null">
				s_status,
			</if>
			<if test="sCreateTime != null">
				s_create_time,
			</if>
			<if test="sCreateId != null">
				s_create_id,
			</if>
			<if test="sUpdateTime != null">
				s_update_time,
			</if>
			<if test="sUpdateId != null">
				s_update_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="sId != null">
				#{sId,jdbcType=INTEGER},
			</if>
			<if test="sNetwork != null">
				#{sNetwork,jdbcType=CHAR},
			</if>
			<if test="sBeginDate != null">
				#{sBeginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sExpireDate != null">
				#{sExpireDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sStatus != null">
				#{sStatus,jdbcType=CHAR},
			</if>
			<if test="sCreateTime != null">
				#{sCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sCreateId != null">
				#{sCreateId,jdbcType=INTEGER},
			</if>
			<if test="sUpdateTime != null">
				#{sUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sUpdateId != null">
				#{sUpdateId,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<update id="update" parameterType="cn.springmvc.model.JhacSaas">
		update jhac_saas
		<set>
			<if test="sNetwork != null">
				s_network = #{sNetwork,jdbcType=CHAR},
			</if>
			<if test="sBeginDate != null">
				s_begin_date = #{sBeginDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sExpireDate != null">
				s_expire_date = #{sExpireDate,jdbcType=TIMESTAMP},
			</if>
			<if test="sStatus != null">
				s_status = #{sStatus,jdbcType=CHAR},
			</if>
			<if test="sCreateTime != null">
				s_create_time = #{sCreateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sCreateId != null">
				s_create_id = #{sCreateId,jdbcType=INTEGER},
			</if>
			<if test="sUpdateTime != null">
				s_update_time = #{sUpdateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="sUpdateId != null">
				s_update_id = #{sUpdateId,jdbcType=INTEGER},
			</if>
		</set>
		where s_id = #{sId,jdbcType=INTEGER}
	</update>

</mapper>